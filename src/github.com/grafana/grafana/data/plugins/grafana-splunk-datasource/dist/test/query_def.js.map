{"version":3,"sources":["../../src/query_def.js"],"names":["_metricAggTypes","text","value","_span","_wherein","operator","condition","_wherethresh","QueryDef","options","concat"],"mappings":"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","file":"query_def.js","sourcesContent":["let _metricAggTypes = [\n  // Aggregate functions\n  {text: \"avg\",            value: 'avg'},\n  {text: \"count\",          value: 'count'},\n  {text: \"distinct_count\", value: 'distinct_count'},\n  {text: \"estdc\",          value: 'estdc'},\n  {text: \"estdc_error\",    value: 'estdc_error'},\n  {text: \"max\",            value: 'max'},\n  {text: \"mean\",           value: 'mean'},\n  {text: \"median\",         value: 'median'},\n  {text: \"min\",            value: 'min'},\n  {text: \"mode\",           value: 'mode'},\n  {text: \"perc95\",         value: 'perc95'},\n  {text: \"range\",          value: 'range'},\n  {text: \"range\",          value: 'range'},\n  {text: \"stdev\",          value: 'stdev'},\n  {text: \"stdevp\",         value: 'stdevp'},\n  {text: \"stdevp\",         value: 'stdevp'},\n  {text: \"sum\",            value: 'sum'},\n  {text: \"sumsq\",          value: 'sumsq'},\n  {text: \"var\",            value: 'var'},\n  {text: \"varp\",           value: 'varp'},\n\n  // Event order functions\n  {text: \"earliest\",       value: 'earliest'},\n  {text: \"first\",          value: 'first'},\n  {text: \"last\",           value: 'last'},\n  {text: \"latest\",         value: 'latest'},\n];\n\nlet _span = [\n  {text: 'auto',  value: 'auto'},\n  {text: '10s',   value: '10s'},\n  {text: '1m',    value: '1m'},\n  {text: '10m',   value: '10m'},\n  {text: '1h',    value: '1h'},\n  {text: '12h',   value: '12h'},\n  {text: '1d',    value: '1d'},\n  {text: '7d',    value: '7d'},\n  {text: '1mon',  value: '1mon'},\n];\n\nlet _wherein = {\n  operator: [\n    {text: 'in',  value: 'in'},\n    {text: 'notin',  value: 'notin'}\n  ],\n  condition: [\n    {text: 'top',  value: 'top'},\n    {text: 'bottom',  value: 'bottom'}\n  ]\n};\n\nlet _wherethresh = {\n  operator: [\n    {text: '<',  value: '<'},\n    {text: '>',  value: '>'}\n  ]\n};\n\nexport default class QueryDef {\n\n  static getMetricAggTypes() {\n    return _metricAggTypes;\n  }\n\n  static getSpanOptions() {\n    return _span;\n  }\n\n  static getWhereOptions() {\n    let options = _wherein.operator.concat(_wherethresh.operator);\n    return options;\n  }\n\n  static getWhereConditions() {\n    return _wherein.condition;\n  }\n}\n"]}