{"version":3,"sources":["../src/query_ctrl.js"],"names":["getSourceId","index","sourcetype","isTargetSet","target","isMetricSet","_","every","metricAggs","agg","field","DEFAULT_FIELD","DEFAULT_INDEX","DEFAULT_SOURCETYPE","isSourceSet","getAppsTypeAhead","metrics","apps","QueryCtrl","SplunkQueryBuilder","queryDef","SplunkQueryCtrl","$scope","$injector","uiSegmentSrv","templateSrv","scope","ds","datasource","getFieldsPromise","target_defaults","rawQuery","query","namespace","resultFormat","func","alias","splitByFields","whereClause","type","condition","operator","value","tcOptions","span","useother","otherstr","usenull","nullstr","binOptions","bins","options","limit","cont","partial","defaultsDeep","resultFormats","text","removeSegment","newSegment","fake","splitBySegments","map","buildWhereSegments","fixSplitBySegments","indexes","sourcetypes","fields","updateSuggestions","renderOptions","getApps","bind","getIndexesPromise","length","Promise","resolve","getIndexes","then","getSourcetypePromise","getSourcetypes","getAppsPromise","sourceId","timeFrom","panelCtrl","range","from","unix","timeTo","to","getFields","catch","getIndex","name","getSourcetype","transformToSegments","getMetricAggTypes","getFieldSegments","segments","splice","cloneDeep","getOptions","getWhereOptions","getWhereConditions","getSpanOptions","refresh","build","hide","onChangeInternal","showOptions","settingsLinkText","push","segment","undefined","filter","whereSegments","operatorSegment","expandable","conditionSegment","newPlusButton","includes","whereTypeChanged","fixTCSplitBySegments","fixSegments","slice","count","lastSegment","Math","max","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+aA,WAASA,WAAT,CAAqBC,KAArB,EAA4BC,UAA5B,EAAwC;AACtC,WAAOD,QAAQ,GAAR,GAAcC,UAArB;AACD;;AAED,WAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,QAAIC,cAAcC,EAAEC,KAAF,CAAQH,OAAOI,UAAf,EAA2B,eAAO;AAClD,aAAOC,IAAIC,KAAJ,KAAcC,aAArB;AACD,KAFiB,CAAlB;;AAIA,WAAON,eACLD,OAAOH,KAAP,KAAiBW,aADZ,IAELR,OAAOF,UAAP,KAAsBW,kBAFxB;AAGD;;AAED,WAASC,WAAT,CAAqBV,MAArB,EAA6B;AAC3B,WAAOA,OAAOH,KAAP,KAAiBW,aAAjB,IAAkCR,OAAOF,UAAP,KAAsBW,kBAA/D;AACD;;AAED,WAASE,gBAAT,GAA4B;AAC1B,WAAO,KAAKC,OAAL,CAAaC,IAApB;AACD;;;;AAlcMX,O;;AACCY,e,kBAAAA,S;;AACAC,wB,kBAAAA,kB;;AACDC,c;;;;;;;;;;;;;;;;;;;;;AAEDR,mB,GAAqB,c;AACrBC,wB,GAAqB,mB;AACrBF,mB,GAAqB,c;;iCAEdU,e;;;AAEX,iCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,WAA7C,EAA2D;AAAA;;AAAA,wIACnDH,MADmD,EAC3CC,SAD2C;;AAGzD,gBAAKG,KAAL,GAAaJ,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACA,gBAAKC,WAAL,GAAmBA,WAAnB;AACA,gBAAKE,EAAL,GAAU,MAAKC,UAAf;;AAEA,gBAAKC,gBAAL,GAAwB,EAAxB;;AAEA,cAAIC,kBAAkB;AACpBC,sBAAU,IADU;AAEpBC,mBAAO,EAFa;AAGpBC,uBAAW,EAHS;AAIpBC,0BAAc,aAJM;AAKpBjC,mBAAOW,aALa;AAMpBV,wBAAYW,kBANQ;AAOpBL,wBAAY,CACV,EAAC2B,MAAM,KAAP,EAAczB,OAAOC,aAArB,EAAoCyB,OAAO,EAA3C,EADU,CAPQ;AAUpBC,2BAAe,EAVK;AAWpBC,yBAAa;AACXC,oBAAM,IADK;AAEX9B,mBAAK,KAFM;AAGX+B,yBAAW,EAHA;AAIXC,wBAAU,EAJC;AAKXC,qBAAO;AALI,aAXO;AAkBpBC,uBAAW;AACTC,oBAAM,MADG;AAETC,wBAAU,IAFD;AAGTC,wBAAU,EAHD;AAITC,uBAAS,KAJA;AAKTC,uBAAS;AALA,aAlBS;AAyBpBC,wBAAY;AACVC,oBAAM;AADI,aAzBQ;AA4BpBC,qBAAS;AACPC,qBAAO,IADA;AAEPC,oBAAM,IAFC;AAGPC,uBAAS;AAHF;AA5BW,WAAtB;AAkCAhD,YAAEiD,YAAF,CAAe,MAAKnD,MAApB,EAA4B0B,eAA5B;;AAEA,gBAAK0B,aAAL,GAAqB,CACnB,EAACC,MAAM,aAAP,EAAsBf,OAAO,aAA7B,EADmB,EAEnB,EAACe,MAAM,OAAP,EAAgBf,OAAO,OAAvB,EAFmB,CAArB;;AAKA;AACA,gBAAKgB,aAAL,GAAqBlC,aAAamC,UAAb,CAAwB,EAACC,MAAM,IAAP,EAAalB,OAAO,cAApB,EAAxB,CAArB;AACA,gBAAKmB,eAAL,GAAuBvD,EAAEwD,GAAF,CAAM,MAAK1D,MAAL,CAAYiC,aAAlB,EAAiCb,aAAamC,UAA9C,CAAvB;AACA,gBAAKI,kBAAL;AACA,gBAAKC,kBAAL;;AAEA,gBAAKhD,OAAL,GAAe;AACbiD,qBAAS,EADI;AAEbC,yBAAa,EAFA;AAGbjD,kBAAM,EAHO;AAIbkD,oBAAQ;AAJK,WAAf;;AAOA,cAAI,CAAC,MAAK/D,MAAL,CAAY2B,QAAjB,EAA2B;AACzB,kBAAKqC,iBAAL;AACA,kBAAKC,aAAL;AACD,WAHD,MAGO;AACL,kBAAKC,OAAL;AACD;;AAED,gBAAKvD,gBAAL,GAAwBT,EAAEiE,IAAF,CAAOxD,gBAAP,QAAxB;AAvEyD;AAwE1D;;AAED;AACA;AACA;;;;qCAEW;AAAA;;AACT,gBAAIyD,0BAAJ;AACA,gBAAI,KAAKxD,OAAL,CAAaiD,OAAb,CAAqBQ,MAAzB,EAAiC;AAC/BD,kCAAoBE,QAAQC,OAAR,CAAgB,KAAK3D,OAAL,CAAaiD,OAA7B,CAApB;AACD,aAFD,MAEO;AACLO,kCAAoB,KAAK7C,EAAL,CAAQiD,UAAR,EAApB;AACD;;AAED,mBAAOJ,kBAAkBK,IAAlB,CAAuB,mBAAW;AACvC,qBAAK7D,OAAL,CAAaiD,OAAb,GAAuBA,OAAvB;AACA,qBAAOA,OAAP;AACD,aAHM,CAAP;AAID;;;0CAEe;AAAA;;AACd,gBAAIa,6BAAJ;AACA,gBAAI,KAAK9D,OAAL,CAAakD,WAAb,CAAyBO,MAA7B,EAAqC;AACnCK,qCAAuBJ,QAAQC,OAAR,CAAgB,KAAK3D,OAAL,CAAakD,WAA7B,CAAvB;AACD,aAFD,MAEO;AACLY,qCAAuB,KAAKnD,EAAL,CAAQoD,cAAR,EAAvB;AACD;;AAED,mBAAOD,qBAAqBD,IAArB,CAA0B,uBAAe;AAC9C,qBAAK7D,OAAL,CAAakD,WAAb,GAA2BA,WAA3B;AACA,qBAAOA,WAAP;AACD,aAHM,CAAP;AAID;;;oCAES;AAAA;;AACR,gBAAIc,uBAAJ;AACA,gBAAI,KAAKhE,OAAL,CAAaC,IAAb,CAAkBwD,MAAtB,EAA8B;AAC5BO,+BAAiBN,QAAQC,OAAR,CAAgB,KAAK3D,OAAL,CAAaC,IAA7B,CAAjB;AACD,aAFD,MAEO;AACL+D,+BAAiB,KAAKrD,EAAL,CAAQ2C,OAAR,EAAjB;AACD;;AAED,mBAAOU,eAAeH,IAAf,CAAoB,gBAAQ;AACjC,qBAAK7D,OAAL,CAAaC,IAAb,GAAoBX,EAAEwD,GAAF,CAAM7C,IAAN,EAAY,MAAZ,CAApB;AACA,qBAAOA,IAAP;AACD,aAHM,CAAP;AAID;;;sCAIW;AAAA;;AAAA,0BACgB,KAAKb,MADrB;AAAA,gBACLH,KADK,WACLA,KADK;AAAA,gBACEC,UADF,WACEA,UADF;;AAEV,gBAAI+E,WAAWjF,YAAYC,KAAZ,EAAmBC,UAAnB,CAAf;AACA,gBAAI2B,yBAAJ;;AAEA,gBAAI,KAAKA,gBAAL,CAAsBoD,QAAtB,CAAJ,EAAqC;AACnCpD,iCAAmB,KAAKA,gBAAL,CAAsBoD,QAAtB,CAAnB;AACD,aAFD,MAEO;AACL,kBAAI,KAAKjE,OAAL,CAAamD,MAAb,CAAoBc,QAApB,KAAiC,KAAKjE,OAAL,CAAamD,MAAb,CAAoBc,QAApB,EAA8BR,MAAnE,EAA2E;AACzE5C,mCAAmB6C,QAAQC,OAAR,CAAgB,KAAK3D,OAAL,CAAamD,MAAb,CAAoBc,QAApB,CAAhB,CAAnB;AACD,eAFD,MAEO;AACL,oBAAIC,WAAW,KAAKC,SAAL,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,IAA1B,EAAf;AACA,oBAAIC,SAAS,KAAKJ,SAAL,CAAeC,KAAf,CAAqBI,EAArB,CAAwBF,IAAxB,EAAb;;AAEAzD,mCAAmB,KAAKF,EAAL,CAAQ8D,SAAR,CAAkBxF,KAAlB,EAAyBC,UAAzB,EAAqCgF,QAArC,EAA+CK,MAA/C,CAAnB;AACD;AACD,mBAAK1D,gBAAL,CAAsBoD,QAAtB,IAAkCpD,gBAAlC;AACD;;AAED,mBAAOA,iBACNgD,IADM,CACD,kBAAU;AACd,qBAAKhD,gBAAL,CAAsBoD,QAAtB,IAAkC,IAAlC;AACA,qBAAKjE,OAAL,CAAamD,MAAb,CAAoBc,QAApB,IAAgCd,MAAhC;AACA,qBAAOA,MAAP;AACD,aALM,EAMNuB,KANM,CAMA,YAAM;AACX,qBAAK7D,gBAAL,CAAsBoD,QAAtB,IAAkC,IAAlC;AACD,aARM,CAAP;AASD;;;6CAEkB;AACjB,mBAAO,KAAKU,QAAL,GAAgBd,IAAhB,CAAqB,mBAAW;AACrC,qBAAOZ,QAAQH,GAAR,CAAY,iBAAS;AAC1B,uBAAO,EAACL,MAAMxD,MAAM2F,IAAb,EAAmBlD,OAAOzC,MAAM2F,IAAhC,EAAP;AACD,eAFM,CAAP;AAGD,aAJM,CAAP;AAKD;;;kDAEuB;AACtB,mBAAO,KAAKC,aAAL,GAAqBhB,IAArB,CAA0B,uBAAe;AAC9C,qBAAOX,YAAYJ,GAAZ,CAAgB,sBAAc;AACnC,uBAAO,EAACL,MAAMvD,WAAW0F,IAAlB,EAAwBlD,OAAOxC,WAAW0F,IAA1C,EAAP;AACD,eAFM,CAAP;AAGD,aAJM,CAAP;AAKD;;;6CAEkB;AACjB,mBAAO,KAAKH,SAAL,GACNZ,IADM,CACD,kBAAU;AACd,qBAAOV,OAAOL,GAAP,CAAW,iBAAS;AACzB,uBAAO,EAACL,MAAM/C,KAAP,EAAcgC,OAAOhC,KAArB,EAAP;AACD,eAFM,CAAP;AAGD,aALM,EAMNmE,IANM,CAMD,KAAKrD,YAAL,CAAkBsE,mBAAlB,CAAsC,IAAtC,CANC,CAAP;AAOD;;;8CAEmB;AAClB,iBAAKxB,OAAL;AACA,iBAAKqB,QAAL;AACA,iBAAKE,aAAL;AACA,iBAAKJ,SAAL;AACD;;;8CAEmB;AAClB,mBAAOrE,SAAS2E,iBAAT,EAAP;AACD;;;8CAEmB;AAAA;;AAClB,mBAAO,KAAKC,gBAAL,GACNnB,IADM,CACD,KAAKrD,YAAL,CAAkBsE,mBAAlB,CAAsC,KAAtC,CADC,EAENjB,IAFM,CAED,oBAAY;AAChBoB,uBAASC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB5F,EAAE6F,SAAF,CAAY,OAAKzC,aAAjB,CAAtB;AACA,qBAAOuC,QAAP;AACD,aALM,CAAP;AAMD;;;0CAEehG,K,EAAO;AAAA;;AACrB,gBAAImG,mBAAJ;AACA,gBAAInG,UAAU,CAAd,EAAiB;AACfmG,2BAAa1B,QAAQC,OAAR,CAAgBvD,SAASiF,eAAT,EAAhB,CAAb;AACD,aAFD,MAEO;AACLD,2BAAa1B,QAAQC,OAAR,CAAgBvD,SAASkF,kBAAT,EAAhB,CAAb;AACD;;AAED,mBAAOF,WAAWvB,IAAX,CAAgB,KAAKrD,YAAL,CAAkBsE,mBAAlB,CAAsC,KAAtC,CAAhB,EACNjB,IADM,CACD,oBAAY;AAChB,kBAAI,OAAKzE,MAAL,CAAYkC,WAAZ,CAAwBC,IAAxB,IAAgCtC,UAAU,CAA9C,EAAiD;AAC/CgG,yBAASC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB5F,EAAE6F,SAAF,CAAY,OAAKzC,aAAjB,CAAtB;AACD;AACD,qBAAOuC,QAAP;AACD,aANM,CAAP;AAOD;;;oCAES;AACR,mBAAOvB,QAAQC,OAAR,CAAgBvD,SAASmF,cAAT,EAAhB,CAAP;AACD;;;6CAMkB;AACjB,iBAAKC,OAAL;AACD;;;6CAEkB;AACjB,iBAAKpG,MAAL,CAAY2B,QAAZ,GAAuB,CAAC,KAAK3B,MAAL,CAAY2B,QAApC;AACD;;;6CAEkB;AACjB,gBAAI,KAAK3B,MAAL,CAAY2B,QAAhB,EAA0B;AACxB,qBAAO,KAAK3B,MAAL,CAAY4B,KAAnB;AACD,aAFD,MAEO;AACL,qBAAOb,mBAAmBsF,KAAnB,CAAyB,KAAKrG,MAA9B,CAAP;AACD;AACF;;;2CAEgBK,G,EAAK;AACpBA,gBAAIiG,IAAJ,GAAW,CAACjG,IAAIiG,IAAhB;AACA,iBAAKC,gBAAL;AACD;;;0CAEe;AACd,iBAAKC,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;2CAEgB;AACf,iBAAKvC,aAAL;AACA,iBAAKsC,gBAAL;AACD;;;0CAEe;AAAA,2BACyB,KAAKvG,MAD9B;AAAA,gBACT+C,OADS,YACTA,OADS;AAAA,gBACAR,SADA,YACAA,SADA;AAAA,gBACWM,UADX,YACWA,UADX;;AAEd,iBAAK4D,gBAAL,GAAwB1F,mBAAmBkD,aAAnB,CAAiC1B,SAAjC,EAA4CM,UAA5C,EAAwDE,OAAxD,CAAxB;AACD;;;2CAEgB;AACf,gBAAIhD,YAAY,KAAKC,MAAjB,CAAJ,EAA8B;AAC5B,mBAAKqF,SAAL;AACA,mBAAKkB,gBAAL;AACD;AACF;;;2CAEgB;AACf,gBAAI7F,YAAY,KAAKV,MAAjB,CAAJ,EAA8B;AAC5B,mBAAKqF,SAAL;AACD;AACF;;;iDAEsB;AACrB,iBAAK5B,eAAL,GAAuBvD,EAAEwD,GAAF,CAAM,KAAK1D,MAAL,CAAYiC,aAAlB,EAAiC,KAAKb,YAAL,CAAkBmC,UAAnD,CAAvB;AACA,iBAAKK,kBAAL;AACA,iBAAK2C,gBAAL;AACD;;;yCAEc;AACb,iBAAKvG,MAAL,CAAYI,UAAZ,CAAuBsG,IAAvB,CAA4B,EAAC3E,MAAM,KAAP,EAAczB,OAAO,OAArB,EAA5B;AACA,iBAAKiG,gBAAL;AACD;;;0CAEe1G,K,EAAO;AACrB,iBAAKG,MAAL,CAAYI,UAAZ,CAAuB0F,MAAvB,CAA8BjG,KAA9B,EAAqC,CAArC;AACA,iBAAK0G,gBAAL;AACD;;;+CAEoB;AACnB,mBACE,KAAKvG,MAAL,CAAYiC,aAAZ,CAA0BoC,MAA1B,KAAqC,CAArC,IACA,KAAKrE,MAAL,CAAYI,UAAZ,CAAuBiE,MAAvB,GAAgC,CAFlC;AAID;;;gDAEqBsC,O,EAAS9G,K,EAAO;AAAA;;AACpC,gBAAI8G,QAAQxE,IAAR,KAAiB,aAArB,EAAoC;AAClCwE,sBAAQxE,IAAR,GAAeyE,SAAf;AACD;AACD,iBAAK5G,MAAL,CAAYiC,aAAZ,GAA4B/B,EAAEwD,GAAF,CAAMxD,EAAE2G,MAAF,CAAS,KAAKpD,eAAd,EAA+B,mBAAW;AAC1E,qBAAQkD,QAAQxE,IAAR,KAAiB,aAAjB,IACAwE,QAAQrE,KAAR,KAAkB,OAAKgB,aAAL,CAAmBhB,KAD7C;AAED,aAHiC,CAAN,EAGxB,OAHwB,CAA5B;AAIA,iBAAKmB,eAAL,GAAuBvD,EAAEwD,GAAF,CAAM,KAAK1D,MAAL,CAAYiC,aAAlB,EAAiC,KAAKb,YAAL,CAAkBmC,UAAnD,CAAvB;;AAEA,gBAAIoD,QAAQrE,KAAR,KAAkB,KAAKgB,aAAL,CAAmBhB,KAAzC,EAAgD;AAC9C,mBAAKmB,eAAL,CAAqBqC,MAArB,CAA4BjG,KAA5B,EAAmC,CAAnC;AACD;;AAED,iBAAK+D,kBAAL;AACA,iBAAK2C,gBAAL;AACD;;;+CAEoB;AACnB,iBAAKO,aAAL,GAAqB,EAArB;AACA,gBAAI,KAAK9G,MAAL,CAAYkC,WAAZ,CAAwBC,IAAxB,KAAiC,SAArC,EAAgD;AAC9C,kBAAI4E,kBAAkB,KAAK3F,YAAL,CAAkBmC,UAAlB,CACpB,EAACjB,OAAO,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBG,QAAhC,EAA0C2E,YAAY,KAAtD,EADoB,CAAtB;AAGA,kBAAIC,mBAAmB,KAAK7F,YAAL,CAAkBmC,UAAlB,CACrB,EAACjB,OAAO,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBE,SAAhC,EAA2C4E,YAAY,KAAvD,EADqB,CAAvB;;AAIA,mBAAKF,aAAL,CAAmBJ,IAAnB,CAAwBK,eAAxB;AACA,mBAAKD,aAAL,CAAmBJ,IAAnB,CAAwBO,gBAAxB;AACD,aAVD,MAUO,IAAI,KAAKjH,MAAL,CAAYkC,WAAZ,CAAwBC,IAAxB,KAAiC,aAArC,EAAoD;AACzD,kBAAI4E,mBAAkB,KAAK3F,YAAL,CAAkBmC,UAAlB,CACpB,EAACjB,OAAO,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBG,QAAhC,EAA0C2E,YAAY,KAAtD,EADoB,CAAtB;;AAIA,mBAAKF,aAAL,CAAmBJ,IAAnB,CAAwBK,gBAAxB;AACD,aANM,MAMA;AACL,mBAAKD,aAAL,CAAmBJ,IAAnB,CAAwB,KAAKtF,YAAL,CAAkB8F,aAAlB,EAAxB;AACD;AACF;;;gDAEqB;AACpB,gBAAI,KAAKJ,aAAL,CAAmB,CAAnB,EAAsBxE,KAAtB,KAAgC,KAAKgB,aAAL,CAAmBhB,KAAvD,EAA8D;AAC5D,mBAAKtC,MAAL,CAAYkC,WAAZ,GAA0B;AACxBC,sBAAM,IADkB;AAExB9B,qBAAK,KAFmB;AAGxB+B,2BAAW,EAHa;AAIxBC,0BAAU,EAJc;AAKxBC,uBAAO;AALiB,eAA1B;AAOA,mBAAKwE,aAAL,GAAqB,EAArB;AACA,mBAAKA,aAAL,CAAmBJ,IAAnB,CAAwB,KAAKtF,YAAL,CAAkB8F,aAAlB,EAAxB;AACD,aAVD,MAUO,IAAIhH,EAAEiH,QAAF,CAAW,CAAC,IAAD,EAAO,OAAP,CAAX,EAA4B,KAAKL,aAAL,CAAmB,CAAnB,EAAsBxE,KAAlD,CAAJ,EAA8D;AACnE,mBAAKtC,MAAL,CAAYkC,WAAZ,CAAwBC,IAAxB,GAA+B,SAA/B;;AAEA,kBAAI,KAAKiF,gBAAL,CAAsB,KAAKN,aAAL,CAAmB,CAAnB,CAAtB,CAAJ,EAAkD;AAChD,qBAAKA,aAAL,CAAmBhB,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B;AACA,oBAAImB,mBAAmB,KAAK7F,YAAL,CAAkBmC,UAAlB,CACrB,EAACjB,OAAO,KAAR,EAAe0E,YAAY,KAA3B,EADqB,CAAvB;AAGA,qBAAKF,aAAL,CAAmBJ,IAAnB,CAAwBO,gBAAxB;;AAEA,qBAAKjH,MAAL,CAAYkC,WAAZ,CAAwBG,QAAxB,GAAmC,KAAKyE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAzD;AACA,qBAAKtC,MAAL,CAAYkC,WAAZ,CAAwBE,SAAxB,GAAoC,KAAK0E,aAAL,CAAmB,CAAnB,EAAsBxE,KAA1D;;AAEA;AACA,oBAAI,CAAC,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBI,KAA7B,EAAoC;AAClC,uBAAKtC,MAAL,CAAYkC,WAAZ,CAAwBI,KAAxB,GAAgC,CAAhC;AACD;AACF,eAdD,MAcO,IAAI,KAAKwE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAtB,KAAgC,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBG,QAA5D,EAAsE;AAC3E,qBAAKrC,MAAL,CAAYkC,WAAZ,CAAwBG,QAAxB,GAAmC,KAAKyE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAzD;AACD,eAFM,MAEA,IAAI,KAAKwE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAtB,KAAgC,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBE,SAA5D,EAAuE;AAC5E,qBAAKpC,MAAL,CAAYkC,WAAZ,CAAwBE,SAAxB,GAAoC,KAAK0E,aAAL,CAAmB,CAAnB,EAAsBxE,KAA1D;AACD;AACF,aAtBM,MAsBA,IAAIpC,EAAEiH,QAAF,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,EAAuB,KAAKL,aAAL,CAAmB,CAAnB,EAAsBxE,KAA7C,CAAJ,EAAyD;AAC9D,mBAAKtC,MAAL,CAAYkC,WAAZ,CAAwBC,IAAxB,GAA+B,aAA/B;;AAEA,kBAAI,KAAKiF,gBAAL,CAAsB,KAAKN,aAAL,CAAmB,CAAnB,CAAtB,CAAJ,EAAkD;AAChD,qBAAKA,aAAL,CAAmBhB,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B;AACA,qBAAK9F,MAAL,CAAYkC,WAAZ,CAAwBG,QAAxB,GAAmC,KAAKyE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAzD;AACD,eAHD,MAGO,IAAI,KAAKwE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAtB,KAAgC,KAAKtC,MAAL,CAAYkC,WAAZ,CAAwBG,QAA5D,EAAsE;AAC3E,qBAAKrC,MAAL,CAAYkC,WAAZ,CAAwBG,QAAxB,GAAmC,KAAKyE,aAAL,CAAmB,CAAnB,EAAsBxE,KAAzD;AACD;AACF;AACD,iBAAKiE,gBAAL;AACD;;;2CAEgBQ,e,EAAiB;AAChC,mBACI7G,EAAEiH,QAAF,CAAW,CAAC,IAAD,EAAO,OAAP,CAAX,EAA4BJ,gBAAgBzE,KAA5C,KACA,CAACpC,EAAEiH,QAAF,CAAW,CAAC,IAAD,EAAO,OAAP,CAAX,EAA4B,KAAKnH,MAAL,CAAYkC,WAAZ,CAAwBG,QAApD,CAFG,IAIJnC,EAAEiH,QAAF,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,EAAuBJ,gBAAgBzE,KAAvC,KACA,CAACpC,EAAEiH,QAAF,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,EAAuB,KAAKnH,MAAL,CAAYkC,WAAZ,CAAwBG,QAA/C,CALL;AAQD;;;+CAEoB;AACnB,gBAAI,KAAKrC,MAAL,CAAY8B,YAAZ,KAA6B,aAAjC,EAAgD;AAC9C,mBAAKuF,oBAAL;AACD,aAFD,MAEO;AACL,mBAAKC,WAAL,CAAiB,KAAK7D,eAAtB;AACD;AACF;;;iDAEsB;AACrB,gBAAI,KAAKA,eAAL,CAAqBY,MAArB,KAAgC,CAApC,EAAuC;AACrC,mBAAKZ,eAAL,CAAqBiD,IAArB,CAA0B,KAAKtF,YAAL,CAAkB8F,aAAlB,EAA1B;AACD,aAFD,MAEO;AACL;AACA,mBAAKzD,eAAL,GAAuB,KAAKA,eAAL,CAAqB8D,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAvB;AACD;AACF;;;sCAEW1B,Q,EAAU;AACpB,gBAAI2B,QAAQ3B,SAASxB,MAArB;AACA,gBAAIoD,cAAc5B,SAAS6B,KAAKC,GAAL,CAASH,QAAM,CAAf,EAAkB,CAAlB,CAAT,CAAlB;;AAEA,gBAAI,CAACC,WAAD,IAAgBA,YAAYtF,IAAZ,KAAqB,aAAzC,EAAwD;AACtD0D,uBAASa,IAAT,CAAc,KAAKtF,YAAL,CAAkB8F,aAAlB,EAAd;AACD;AACF;;;;QAlakCpG,S;;;;AA2brCG,sBAAgB2G,WAAhB,GAA8B,4BAA9B","file":"query_ctrl.js","sourcesContent":["// import angular from 'angular';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport {SplunkQueryBuilder} from './query_builder';\nimport queryDef from './query_def';\n\nconst DEFAULT_INDEX      = 'select index',\n      DEFAULT_SOURCETYPE = 'select sourcetype',\n      DEFAULT_FIELD      = 'select field';\n\nexport class SplunkQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, templateSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.templateSrv = templateSrv;\n    this.ds = this.datasource;\n\n    this.getFieldsPromise = {};\n\n    var target_defaults = {\n      rawQuery: true,\n      query: '',\n      namespace: '',\n      resultFormat: 'time_series',\n      index: DEFAULT_INDEX,\n      sourcetype: DEFAULT_SOURCETYPE,\n      metricAggs: [\n        {func: 'avg', field: DEFAULT_FIELD, alias: ''}\n      ],\n      splitByFields: [],\n      whereClause: {\n        type: null,\n        agg: 'avg',\n        condition: '',\n        operator: '',\n        value: ''\n      },\n      tcOptions: {\n        span: 'auto',\n        useother: true,\n        otherstr: '',\n        usenull: false,\n        nullstr: ''\n      },\n      binOptions: {\n        bins: null,\n      },\n      options: {\n        limit: null,\n        cont: true,\n        partial: true\n      }\n    };\n    _.defaultsDeep(this.target, target_defaults);\n\n    this.resultFormats = [\n      {text: 'Time series', value: 'time_series'},\n      {text: 'Table', value: 'table'},\n    ];\n\n    // Build segments\n    this.removeSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove --'});\n    this.splitBySegments = _.map(this.target.splitByFields, uiSegmentSrv.newSegment);\n    this.buildWhereSegments();\n    this.fixSplitBySegments();\n\n    this.metrics = {\n      indexes: [],\n      sourcetypes: [],\n      apps: [],\n      fields: {}\n    };\n\n    if (!this.target.rawQuery) {\n      this.updateSuggestions();\n      this.renderOptions();\n    } else {\n      this.getApps();\n    }\n\n    this.getAppsTypeAhead = _.bind(getAppsTypeAhead, this);\n  }\n\n  ////////////////////////\n  // Metric suggestions //\n  ////////////////////////\n\n  getIndex() {\n    let getIndexesPromise;\n    if (this.metrics.indexes.length) {\n      getIndexesPromise = Promise.resolve(this.metrics.indexes);\n    } else {\n      getIndexesPromise = this.ds.getIndexes();\n    }\n\n    return getIndexesPromise.then(indexes => {\n      this.metrics.indexes = indexes;\n      return indexes;\n    });\n  }\n\n  getSourcetype() {\n    let getSourcetypePromise;\n    if (this.metrics.sourcetypes.length) {\n      getSourcetypePromise = Promise.resolve(this.metrics.sourcetypes);\n    } else {\n      getSourcetypePromise = this.ds.getSourcetypes();\n    }\n\n    return getSourcetypePromise.then(sourcetypes => {\n      this.metrics.sourcetypes = sourcetypes;\n      return sourcetypes;\n    });\n  }\n\n  getApps() {\n    let getAppsPromise;\n    if (this.metrics.apps.length) {\n      getAppsPromise = Promise.resolve(this.metrics.apps);\n    } else {\n      getAppsPromise = this.ds.getApps();\n    }\n\n    return getAppsPromise.then(apps => {\n      this.metrics.apps = _.map(apps, 'name');\n      return apps;\n    });\n  }\n\n  // Fetching fields list cause high resources consumption,\n  // so if query already running, wait for result and don't run new search.\n  getFields() {\n    let {index, sourcetype} = this.target;\n    let sourceId = getSourceId(index, sourcetype);\n    let getFieldsPromise;\n\n    if (this.getFieldsPromise[sourceId]) {\n      getFieldsPromise = this.getFieldsPromise[sourceId];\n    } else {\n      if (this.metrics.fields[sourceId] && this.metrics.fields[sourceId].length) {\n        getFieldsPromise = Promise.resolve(this.metrics.fields[sourceId]);\n      } else {\n        let timeFrom = this.panelCtrl.range.from.unix();\n        let timeTo = this.panelCtrl.range.to.unix();\n\n        getFieldsPromise = this.ds.getFields(index, sourcetype, timeFrom, timeTo);\n      }\n      this.getFieldsPromise[sourceId] = getFieldsPromise;\n    }\n\n    return getFieldsPromise\n    .then(fields => {\n      this.getFieldsPromise[sourceId] = null;\n      this.metrics.fields[sourceId] = fields;\n      return fields;\n    })\n    .catch(() => {\n      this.getFieldsPromise[sourceId] = null;\n    });\n  }\n\n  getIndexSegments() {\n    return this.getIndex().then(indexes => {\n      return indexes.map(index => {\n        return {text: index.name, value: index.name};\n      });\n    });\n  }\n\n  getSourcetypeSegments() {\n    return this.getSourcetype().then(sourcetypes => {\n      return sourcetypes.map(sourcetype => {\n        return {text: sourcetype.name, value: sourcetype.name};\n      });\n    });\n  }\n\n  getFieldSegments() {\n    return this.getFields()\n    .then(fields => {\n      return fields.map(field => {\n        return {text: field, value: field};\n      });\n    })\n    .then(this.uiSegmentSrv.transformToSegments(true));\n  }\n\n  updateSuggestions() {\n    this.getApps();\n    this.getIndex();\n    this.getSourcetype();\n    this.getFields();\n  }\n\n  getMetricAggTypes() {\n    return queryDef.getMetricAggTypes();\n  }\n\n  getSplitBySegment() {\n    return this.getFieldSegments()\n    .then(this.uiSegmentSrv.transformToSegments(false))\n    .then(segments => {\n      segments.splice(0, 0, _.cloneDeep(this.removeSegment));\n      return segments;\n    });\n  }\n\n  getWhereSegment(index) {\n    let getOptions;\n    if (index === 0) {\n      getOptions = Promise.resolve(queryDef.getWhereOptions());\n    } else {\n      getOptions = Promise.resolve(queryDef.getWhereConditions());\n    }\n\n    return getOptions.then(this.uiSegmentSrv.transformToSegments(false))\n    .then(segments => {\n      if (this.target.whereClause.type && index === 0) {\n        segments.splice(0, 0, _.cloneDeep(this.removeSegment));\n      }\n      return segments;\n    });\n  }\n\n  getSpan() {\n    return Promise.resolve(queryDef.getSpanOptions());\n  }\n\n  //////////////////////////////\n  // Editor control functions //\n  //////////////////////////////\n\n  onChangeInternal() {\n    this.refresh();\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  getCollapsedText() {\n    if (this.target.rawQuery) {\n      return this.target.query;\n    } else {\n      return SplunkQueryBuilder.build(this.target);\n    }\n  }\n\n  toggleShowMetric(agg) {\n    agg.hide = !agg.hide;\n    this.onChangeInternal();\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  onOptionChange() {\n    this.renderOptions();\n    this.onChangeInternal();\n  }\n\n  renderOptions() {\n    let {options, tcOptions, binOptions} = this.target;\n    this.settingsLinkText = SplunkQueryBuilder.renderOptions(tcOptions, binOptions, options);\n  }\n\n  onMetricChange() {\n    if (isTargetSet(this.target)) {\n      this.getFields();\n      this.onChangeInternal();\n    }\n  }\n\n  onSourceChange() {\n    if (isSourceSet(this.target)) {\n      this.getFields();\n    }\n  }\n\n  onResultFormatChange() {\n    this.splitBySegments = _.map(this.target.splitByFields, this.uiSegmentSrv.newSegment);\n    this.fixSplitBySegments();\n    this.onChangeInternal();\n  }\n\n  addMetricAgg() {\n    this.target.metricAggs.push({func: 'avg', field: 'value'});\n    this.onChangeInternal();\n  }\n\n  removeMetricAgg(index) {\n    this.target.metricAggs.splice(index, 1);\n    this.onChangeInternal();\n  }\n\n  disableWhereEditor() {\n    return (\n      this.target.splitByFields.length === 0 ||\n      this.target.metricAggs.length > 1\n    );\n  }\n\n  splitBySegmentChanged(segment, index) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.splitByFields = _.map(_.filter(this.splitBySegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.splitBySegments = _.map(this.target.splitByFields, this.uiSegmentSrv.newSegment);\n\n    if (segment.value === this.removeSegment.value) {\n      this.splitBySegments.splice(index, 1);\n    }\n\n    this.fixSplitBySegments();\n    this.onChangeInternal();\n  }\n\n  buildWhereSegments() {\n    this.whereSegments = [];\n    if (this.target.whereClause.type === 'wherein') {\n      let operatorSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.operator, expandable: false}\n      );\n      let conditionSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.condition, expandable: false}\n      );\n\n      this.whereSegments.push(operatorSegment);\n      this.whereSegments.push(conditionSegment);\n    } else if (this.target.whereClause.type === 'wherethresh') {\n      let operatorSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.operator, expandable: false}\n      );\n\n      this.whereSegments.push(operatorSegment);\n    } else {\n      this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  whereSegmentChanged() {\n    if (this.whereSegments[0].value === this.removeSegment.value) {\n      this.target.whereClause = {\n        type: null,\n        agg: 'avg',\n        condition: '',\n        operator: '',\n        value: ''\n      };\n      this.whereSegments = [];\n      this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n    } else if (_.includes(['in', 'notin'], this.whereSegments[0].value)) {\n      this.target.whereClause.type = 'wherein';\n\n      if (this.whereTypeChanged(this.whereSegments[0])) {\n        this.whereSegments.splice(1, 2);\n        let conditionSegment = this.uiSegmentSrv.newSegment(\n          {value: 'top', expandable: false}\n        );\n        this.whereSegments.push(conditionSegment);\n\n        this.target.whereClause.operator = this.whereSegments[0].value;\n        this.target.whereClause.condition = this.whereSegments[1].value;\n\n        // Set default top5\n        if (!this.target.whereClause.value) {\n          this.target.whereClause.value = 5;\n        }\n      } else if (this.whereSegments[0].value !== this.target.whereClause.operator) {\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      } else if (this.whereSegments[1].value !== this.target.whereClause.condition) {\n        this.target.whereClause.condition = this.whereSegments[1].value;\n      }\n    } else if (_.includes(['<', '>'], this.whereSegments[0].value)) {\n      this.target.whereClause.type = 'wherethresh';\n\n      if (this.whereTypeChanged(this.whereSegments[0])) {\n        this.whereSegments.splice(1, 2);\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      } else if (this.whereSegments[0].value !== this.target.whereClause.operator) {\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      }\n    }\n    this.onChangeInternal();\n  }\n\n  whereTypeChanged(operatorSegment) {\n    return ((\n        _.includes(['in', 'notin'], operatorSegment.value) &&\n        !_.includes(['in', 'notin'], this.target.whereClause.operator)\n      ) || (\n        _.includes(['<', '>'], operatorSegment.value) &&\n        !_.includes(['<', '>'], this.target.whereClause.operator)\n      )\n    );\n  }\n\n  fixSplitBySegments() {\n    if (this.target.resultFormat === 'time_series') {\n      this.fixTCSplitBySegments();\n    } else {\n      this.fixSegments(this.splitBySegments);\n    }\n  }\n\n  fixTCSplitBySegments() {\n    if (this.splitBySegments.length === 0) {\n      this.splitBySegments.push(this.uiSegmentSrv.newPlusButton());\n    } else {\n      // Split by in timechart supports only one field\n      this.splitBySegments = this.splitBySegments.slice(0, 1);\n    }\n  }\n\n  fixSegments(segments) {\n    var count = segments.length;\n    var lastSegment = segments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n}\n\nfunction getSourceId(index, sourcetype) {\n  return index + '&' + sourcetype;\n}\n\nfunction isTargetSet(target) {\n  let isMetricSet = _.every(target.metricAggs, agg => {\n    return agg.field !== DEFAULT_FIELD;\n  });\n\n  return isMetricSet &&\n    target.index !== DEFAULT_INDEX &&\n    target.sourcetype !== DEFAULT_SOURCETYPE;\n}\n\nfunction isSourceSet(target) {\n  return target.index !== DEFAULT_INDEX && target.sourcetype !== DEFAULT_SOURCETYPE;\n}\n\nfunction getAppsTypeAhead() {\n  return this.metrics.apps;\n}\n\nSplunkQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}