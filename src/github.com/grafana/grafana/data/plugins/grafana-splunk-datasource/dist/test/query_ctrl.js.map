{"version":3,"sources":["../../src/query_ctrl.js"],"names":["DEFAULT_INDEX","DEFAULT_SOURCETYPE","DEFAULT_FIELD","SplunkQueryCtrl","$scope","$injector","uiSegmentSrv","templateSrv","scope","ds","datasource","getFieldsPromise","target_defaults","rawQuery","query","namespace","resultFormat","index","sourcetype","metricAggs","func","field","alias","splitByFields","whereClause","type","agg","condition","operator","value","tcOptions","span","useother","otherstr","usenull","nullstr","binOptions","bins","options","limit","cont","partial","defaultsDeep","target","resultFormats","text","removeSegment","newSegment","fake","splitBySegments","map","buildWhereSegments","fixSplitBySegments","metrics","indexes","sourcetypes","apps","fields","updateSuggestions","renderOptions","getApps","getAppsTypeAhead","bind","getIndexesPromise","length","Promise","resolve","getIndexes","then","getSourcetypePromise","getSourcetypes","getAppsPromise","sourceId","getSourceId","timeFrom","panelCtrl","range","from","unix","timeTo","to","getFields","catch","getIndex","name","getSourcetype","transformToSegments","getMetricAggTypes","getFieldSegments","segments","splice","cloneDeep","getOptions","getWhereOptions","getWhereConditions","getSpanOptions","refresh","build","hide","onChangeInternal","showOptions","settingsLinkText","isTargetSet","isSourceSet","push","segment","undefined","filter","whereSegments","operatorSegment","expandable","conditionSegment","newPlusButton","includes","whereTypeChanged","fixTCSplitBySegments","fixSegments","slice","count","lastSegment","Math","max","isMetricSet","every","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["// import angular from 'angular';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport {SplunkQueryBuilder} from './query_builder';\nimport queryDef from './query_def';\n\nconst DEFAULT_INDEX      = 'select index',\n      DEFAULT_SOURCETYPE = 'select sourcetype',\n      DEFAULT_FIELD      = 'select field';\n\nexport class SplunkQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, templateSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.templateSrv = templateSrv;\n    this.ds = this.datasource;\n\n    this.getFieldsPromise = {};\n\n    var target_defaults = {\n      rawQuery: true,\n      query: '',\n      namespace: '',\n      resultFormat: 'time_series',\n      index: DEFAULT_INDEX,\n      sourcetype: DEFAULT_SOURCETYPE,\n      metricAggs: [\n        {func: 'avg', field: DEFAULT_FIELD, alias: ''}\n      ],\n      splitByFields: [],\n      whereClause: {\n        type: null,\n        agg: 'avg',\n        condition: '',\n        operator: '',\n        value: ''\n      },\n      tcOptions: {\n        span: 'auto',\n        useother: true,\n        otherstr: '',\n        usenull: false,\n        nullstr: ''\n      },\n      binOptions: {\n        bins: null,\n      },\n      options: {\n        limit: null,\n        cont: true,\n        partial: true\n      }\n    };\n    _.defaultsDeep(this.target, target_defaults);\n\n    this.resultFormats = [\n      {text: 'Time series', value: 'time_series'},\n      {text: 'Table', value: 'table'},\n    ];\n\n    // Build segments\n    this.removeSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove --'});\n    this.splitBySegments = _.map(this.target.splitByFields, uiSegmentSrv.newSegment);\n    this.buildWhereSegments();\n    this.fixSplitBySegments();\n\n    this.metrics = {\n      indexes: [],\n      sourcetypes: [],\n      apps: [],\n      fields: {}\n    };\n\n    if (!this.target.rawQuery) {\n      this.updateSuggestions();\n      this.renderOptions();\n    } else {\n      this.getApps();\n    }\n\n    this.getAppsTypeAhead = _.bind(getAppsTypeAhead, this);\n  }\n\n  ////////////////////////\n  // Metric suggestions //\n  ////////////////////////\n\n  getIndex() {\n    let getIndexesPromise;\n    if (this.metrics.indexes.length) {\n      getIndexesPromise = Promise.resolve(this.metrics.indexes);\n    } else {\n      getIndexesPromise = this.ds.getIndexes();\n    }\n\n    return getIndexesPromise.then(indexes => {\n      this.metrics.indexes = indexes;\n      return indexes;\n    });\n  }\n\n  getSourcetype() {\n    let getSourcetypePromise;\n    if (this.metrics.sourcetypes.length) {\n      getSourcetypePromise = Promise.resolve(this.metrics.sourcetypes);\n    } else {\n      getSourcetypePromise = this.ds.getSourcetypes();\n    }\n\n    return getSourcetypePromise.then(sourcetypes => {\n      this.metrics.sourcetypes = sourcetypes;\n      return sourcetypes;\n    });\n  }\n\n  getApps() {\n    let getAppsPromise;\n    if (this.metrics.apps.length) {\n      getAppsPromise = Promise.resolve(this.metrics.apps);\n    } else {\n      getAppsPromise = this.ds.getApps();\n    }\n\n    return getAppsPromise.then(apps => {\n      this.metrics.apps = _.map(apps, 'name');\n      return apps;\n    });\n  }\n\n  // Fetching fields list cause high resources consumption,\n  // so if query already running, wait for result and don't run new search.\n  getFields() {\n    let {index, sourcetype} = this.target;\n    let sourceId = getSourceId(index, sourcetype);\n    let getFieldsPromise;\n\n    if (this.getFieldsPromise[sourceId]) {\n      getFieldsPromise = this.getFieldsPromise[sourceId];\n    } else {\n      if (this.metrics.fields[sourceId] && this.metrics.fields[sourceId].length) {\n        getFieldsPromise = Promise.resolve(this.metrics.fields[sourceId]);\n      } else {\n        let timeFrom = this.panelCtrl.range.from.unix();\n        let timeTo = this.panelCtrl.range.to.unix();\n\n        getFieldsPromise = this.ds.getFields(index, sourcetype, timeFrom, timeTo);\n      }\n      this.getFieldsPromise[sourceId] = getFieldsPromise;\n    }\n\n    return getFieldsPromise\n    .then(fields => {\n      this.getFieldsPromise[sourceId] = null;\n      this.metrics.fields[sourceId] = fields;\n      return fields;\n    })\n    .catch(() => {\n      this.getFieldsPromise[sourceId] = null;\n    });\n  }\n\n  getIndexSegments() {\n    return this.getIndex().then(indexes => {\n      return indexes.map(index => {\n        return {text: index.name, value: index.name};\n      });\n    });\n  }\n\n  getSourcetypeSegments() {\n    return this.getSourcetype().then(sourcetypes => {\n      return sourcetypes.map(sourcetype => {\n        return {text: sourcetype.name, value: sourcetype.name};\n      });\n    });\n  }\n\n  getFieldSegments() {\n    return this.getFields()\n    .then(fields => {\n      return fields.map(field => {\n        return {text: field, value: field};\n      });\n    })\n    .then(this.uiSegmentSrv.transformToSegments(true));\n  }\n\n  updateSuggestions() {\n    this.getApps();\n    this.getIndex();\n    this.getSourcetype();\n    this.getFields();\n  }\n\n  getMetricAggTypes() {\n    return queryDef.getMetricAggTypes();\n  }\n\n  getSplitBySegment() {\n    return this.getFieldSegments()\n    .then(this.uiSegmentSrv.transformToSegments(false))\n    .then(segments => {\n      segments.splice(0, 0, _.cloneDeep(this.removeSegment));\n      return segments;\n    });\n  }\n\n  getWhereSegment(index) {\n    let getOptions;\n    if (index === 0) {\n      getOptions = Promise.resolve(queryDef.getWhereOptions());\n    } else {\n      getOptions = Promise.resolve(queryDef.getWhereConditions());\n    }\n\n    return getOptions.then(this.uiSegmentSrv.transformToSegments(false))\n    .then(segments => {\n      if (this.target.whereClause.type && index === 0) {\n        segments.splice(0, 0, _.cloneDeep(this.removeSegment));\n      }\n      return segments;\n    });\n  }\n\n  getSpan() {\n    return Promise.resolve(queryDef.getSpanOptions());\n  }\n\n  //////////////////////////////\n  // Editor control functions //\n  //////////////////////////////\n\n  onChangeInternal() {\n    this.refresh();\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  getCollapsedText() {\n    if (this.target.rawQuery) {\n      return this.target.query;\n    } else {\n      return SplunkQueryBuilder.build(this.target);\n    }\n  }\n\n  toggleShowMetric(agg) {\n    agg.hide = !agg.hide;\n    this.onChangeInternal();\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  onOptionChange() {\n    this.renderOptions();\n    this.onChangeInternal();\n  }\n\n  renderOptions() {\n    let {options, tcOptions, binOptions} = this.target;\n    this.settingsLinkText = SplunkQueryBuilder.renderOptions(tcOptions, binOptions, options);\n  }\n\n  onMetricChange() {\n    if (isTargetSet(this.target)) {\n      this.getFields();\n      this.onChangeInternal();\n    }\n  }\n\n  onSourceChange() {\n    if (isSourceSet(this.target)) {\n      this.getFields();\n    }\n  }\n\n  onResultFormatChange() {\n    this.splitBySegments = _.map(this.target.splitByFields, this.uiSegmentSrv.newSegment);\n    this.fixSplitBySegments();\n    this.onChangeInternal();\n  }\n\n  addMetricAgg() {\n    this.target.metricAggs.push({func: 'avg', field: 'value'});\n    this.onChangeInternal();\n  }\n\n  removeMetricAgg(index) {\n    this.target.metricAggs.splice(index, 1);\n    this.onChangeInternal();\n  }\n\n  disableWhereEditor() {\n    return (\n      this.target.splitByFields.length === 0 ||\n      this.target.metricAggs.length > 1\n    );\n  }\n\n  splitBySegmentChanged(segment, index) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.splitByFields = _.map(_.filter(this.splitBySegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.splitBySegments = _.map(this.target.splitByFields, this.uiSegmentSrv.newSegment);\n\n    if (segment.value === this.removeSegment.value) {\n      this.splitBySegments.splice(index, 1);\n    }\n\n    this.fixSplitBySegments();\n    this.onChangeInternal();\n  }\n\n  buildWhereSegments() {\n    this.whereSegments = [];\n    if (this.target.whereClause.type === 'wherein') {\n      let operatorSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.operator, expandable: false}\n      );\n      let conditionSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.condition, expandable: false}\n      );\n\n      this.whereSegments.push(operatorSegment);\n      this.whereSegments.push(conditionSegment);\n    } else if (this.target.whereClause.type === 'wherethresh') {\n      let operatorSegment = this.uiSegmentSrv.newSegment(\n        {value: this.target.whereClause.operator, expandable: false}\n      );\n\n      this.whereSegments.push(operatorSegment);\n    } else {\n      this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  whereSegmentChanged() {\n    if (this.whereSegments[0].value === this.removeSegment.value) {\n      this.target.whereClause = {\n        type: null,\n        agg: 'avg',\n        condition: '',\n        operator: '',\n        value: ''\n      };\n      this.whereSegments = [];\n      this.whereSegments.push(this.uiSegmentSrv.newPlusButton());\n    } else if (_.includes(['in', 'notin'], this.whereSegments[0].value)) {\n      this.target.whereClause.type = 'wherein';\n\n      if (this.whereTypeChanged(this.whereSegments[0])) {\n        this.whereSegments.splice(1, 2);\n        let conditionSegment = this.uiSegmentSrv.newSegment(\n          {value: 'top', expandable: false}\n        );\n        this.whereSegments.push(conditionSegment);\n\n        this.target.whereClause.operator = this.whereSegments[0].value;\n        this.target.whereClause.condition = this.whereSegments[1].value;\n\n        // Set default top5\n        if (!this.target.whereClause.value) {\n          this.target.whereClause.value = 5;\n        }\n      } else if (this.whereSegments[0].value !== this.target.whereClause.operator) {\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      } else if (this.whereSegments[1].value !== this.target.whereClause.condition) {\n        this.target.whereClause.condition = this.whereSegments[1].value;\n      }\n    } else if (_.includes(['<', '>'], this.whereSegments[0].value)) {\n      this.target.whereClause.type = 'wherethresh';\n\n      if (this.whereTypeChanged(this.whereSegments[0])) {\n        this.whereSegments.splice(1, 2);\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      } else if (this.whereSegments[0].value !== this.target.whereClause.operator) {\n        this.target.whereClause.operator = this.whereSegments[0].value;\n      }\n    }\n    this.onChangeInternal();\n  }\n\n  whereTypeChanged(operatorSegment) {\n    return ((\n        _.includes(['in', 'notin'], operatorSegment.value) &&\n        !_.includes(['in', 'notin'], this.target.whereClause.operator)\n      ) || (\n        _.includes(['<', '>'], operatorSegment.value) &&\n        !_.includes(['<', '>'], this.target.whereClause.operator)\n      )\n    );\n  }\n\n  fixSplitBySegments() {\n    if (this.target.resultFormat === 'time_series') {\n      this.fixTCSplitBySegments();\n    } else {\n      this.fixSegments(this.splitBySegments);\n    }\n  }\n\n  fixTCSplitBySegments() {\n    if (this.splitBySegments.length === 0) {\n      this.splitBySegments.push(this.uiSegmentSrv.newPlusButton());\n    } else {\n      // Split by in timechart supports only one field\n      this.splitBySegments = this.splitBySegments.slice(0, 1);\n    }\n  }\n\n  fixSegments(segments) {\n    var count = segments.length;\n    var lastSegment = segments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n}\n\nfunction getSourceId(index, sourcetype) {\n  return index + '&' + sourcetype;\n}\n\nfunction isTargetSet(target) {\n  let isMetricSet = _.every(target.metricAggs, agg => {\n    return agg.field !== DEFAULT_FIELD;\n  });\n\n  return isMetricSet &&\n    target.index !== DEFAULT_INDEX &&\n    target.sourcetype !== DEFAULT_SOURCETYPE;\n}\n\nfunction isSourceSet(target) {\n  return target.index !== DEFAULT_INDEX && target.sourcetype !== DEFAULT_SOURCETYPE;\n}\n\nfunction getAppsTypeAhead() {\n  return this.metrics.apps;\n}\n\nSplunkQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}